react-redux
import { createStore,applyMiddleware} from 'redux';
import reducers  from './reducers' (auth,login)

const store = createStore(reducers,applyMiddleware(reduxThunk));

export default store;

import {LOGIN,LOGOUT,REGISTEE} from "../../store/actionTypes"
import {Login,Loginout,actions} from "../../store/action"

const mapStateToProps = (state) =>{
    return {
        ...state.Login
    }
}

const mapDispatchToProps = (dispath) = >{
     Login:(name,passward)=>{
             dispatch({type:LOGIN,payload:{name:name,password:passward}})
      },
      Loginout:()=>{  dispatch({type:LOGOUT})},
}

export default connect(mapStateToProps,mapDispatchToProps)(Release);

export default connect(state=>...state.login,(dispatch)=>{
    login:()=>{
        dispatch(Login())
    },
    Loginout:()=>{
        dispatch(Loginout())
    }
})(Release);

export default connect(state=>...state.login,actions)(Release);




